# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: v1
data:
  ACCOUNTS_DB_URI: postgresql://accounts-admin:accounts-pwd@accounts-db:5432/accounts-db
  POSTGRES_DB: accounts-db
  POSTGRES_PASSWORD: accounts-pwd
  POSTGRES_USER: accounts-admin
kind: ConfigMap
metadata:
  labels:
    app: accounts-db
    application: bank-of-splunk
    environment: development
    team: accounts
    tier: db
  name: accounts-db-config
---
apiVersion: v1
kind: Service
metadata:
  labels:
    application: bank-of-splunk
    environment: development
    team: accounts
    tier: db
  name: accounts-db
spec:
  ports:
    - name: tcp
      port: 5432
      protocol: TCP
      targetPort: 5432
  selector:
    app: accounts-db
    application: bank-of-splunk
    environment: development
    team: accounts
    tier: db
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    application: bank-of-splunk
    environment: development
    team: accounts
    tier: db
  name: accounts-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: accounts-db
      application: bank-of-splunk
      environment: development
      team: accounts
      tier: db
  serviceName: accounts-db
  template:
    metadata:
      labels:
        app: accounts-db
        application: bank-of-splunk
        environment: development
        team: accounts
        tier: db
    spec:
      containers:
        - envFrom:
            - configMapRef:
                name: environment-config
            - configMapRef:
                name: accounts-db-config
            - configMapRef:
                name: demo-data-config
          image: ghcr.io/splunk/bank-of-splunk/accounts-db:v1.3.1@sha256:fea9e1a74f9e919158a3ed7049f3da2b9016ef96a5e62ad606559bc494be2ee1
          name: accounts-db
          ports:
            - containerPort: 5432
          resources:
            limits:
              cpu: 250m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgresdb
              subPath: postgres
      serviceAccount: bank-of-anthos
      serviceAccountName: default
      volumes:
        - emptyDir: {}
          name: postgresdb
---
apiVersion: v1
kind: Service
metadata:
  labels:
    application: bank-of-splunk
    environment: development
    team: accounts
    tier: backend
  name: userservice
spec:
  ports:
    - name: http
      port: 8080
      targetPort: 8080
  selector:
    app: userservice
    application: bank-of-splunk
    environment: development
    team: accounts
    tier: backend
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    application: bank-of-splunk
    environment: development
    team: accounts
    tier: backend
  name: userservice
spec:
  selector:
    matchLabels:
      app: userservice
      application: bank-of-splunk
      environment: development
      team: accounts
      tier: backend
  template:
    metadata:
      annotations: null
      labels:
        app: userservice
        application: bank-of-splunk
        environment: development
        team: accounts
        tier: backend
    spec:
      containers:
        - env:
            - name: VERSION
              value: v1.3.1
            - name: PORT
              value: "8080"
            - name: ENABLE_TRACING
              value: "false"
            - name: TOKEN_EXPIRY_SECONDS
              value: "3600"
            - name: PRIV_KEY_PATH
              value: /tmp/.ssh/privatekey
            - name: LOG_LEVEL
              value: info
            - name: SPLUNK_OTEL_AGENT
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: http://$(SPLUNK_OTEL_AGENT):4317
            - name: OTEL_SERVICE_NAME
              value: userservice
          envFrom:
            - configMapRef:
                name: environment-config
            - configMapRef:
                name: accounts-db-config
          image: ghcr.io/splunk/bank-of-splunk/userservice:v1.3.1@sha256:3c18a722b9d0cad1ade9d3e2e828542abae03a51ca34e8243ae290bd9d9d573e
          name: userservice
          ports:
            - containerPort: 8080
              name: http-server
          readinessProbe:
            httpGet:
              path: /ready
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 500m
              ephemeral-storage: 0.25Gi
              memory: 256Mi
            requests:
              cpu: 260m
              ephemeral-storage: 0.25Gi
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - all
            privileged: false
            readOnlyRootFilesystem: true
          volumeMounts:
            - mountPath: /tmp
              name: tmp
            - mountPath: /tmp/.ssh
              name: keys
              readOnly: true
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: bank-of-anthos
      terminationGracePeriodSeconds: 5
      volumes:
        - emptyDir: {}
          name: tmp
        - name: keys
          secret:
            items:
              - key: jwtRS256.key
                path: privatekey
              - key: jwtRS256.key.pub
                path: publickey
            secretName: jwt-key


#
# This file is autogenerated by pip-compile with Python 3.11
# by the following command:
#
#    pip-compile --output-file=requirements.txt requirements.in
#
blinker==1.8.2
    # via flask
cachetools==5.5.0
    # via google-auth
certifi==2024.8.30
    # via requests
cffi==1.17.1
    # via cryptography
charset-normalizer==3.3.2
    # via requests
click==8.1.7
    # via flask
cryptography==43.0.1
    # via -r requirements.in
deprecated==1.2.14
    # via
    #   opentelemetry-api
    #   opentelemetry-semantic-conventions
flask==3.0.3
    # via -r requirements.in
google-api-core[grpc]==2.20.0
    # via google-cloud-trace
google-auth==2.35.0
    # via
    #   -r requirements.in
    #   google-api-core
    #   google-cloud-trace
google-cloud-trace==1.13.5
    # via opentelemetry-exporter-gcp-trace
googleapis-common-protos==1.65.0
    # via
    #   google-api-core
    #   grpcio-status
grpcio==1.66.2
    # via
    #   google-api-core
    #   grpcio-status
grpcio-status==1.66.2
    # via google-api-core
gunicorn==22.0.0
    # via -r requirements.in
idna==3.10
    # via requests
importlib-metadata==8.4.0
    # via
    #   opentelemetry-api
    #   opentelemetry-instrumentation-flask
itsdangerous==2.2.0
    # via flask
jinja2==3.1.4
    # via flask
markupsafe==2.1.5
    # via
    #   jinja2
    #   werkzeug
opentelemetry-api==1.27.0
    # via
    #   opentelemetry-exporter-gcp-trace
    #   opentelemetry-instrumentation
    #   opentelemetry-instrumentation-flask
    #   opentelemetry-instrumentation-jinja2
    #   opentelemetry-instrumentation-requests
    #   opentelemetry-instrumentation-wsgi
    #   opentelemetry-propagator-gcp
    #   opentelemetry-resourcedetector-gcp
    #   opentelemetry-sdk
    #   opentelemetry-semantic-conventions
opentelemetry-exporter-gcp-trace==1.7.0
    # via -r requirements.in
opentelemetry-instrumentation==0.48b0
    # via
    #   opentelemetry-instrumentation-flask
    #   opentelemetry-instrumentation-jinja2
    #   opentelemetry-instrumentation-requests
    #   opentelemetry-instrumentation-wsgi
opentelemetry-instrumentation-flask==0.48b0
    # via -r requirements.in
opentelemetry-instrumentation-jinja2==0.48b0
    # via -r requirements.in
opentelemetry-instrumentation-requests==0.48b0
    # via -r requirements.in
opentelemetry-instrumentation-wsgi==0.48b0
    # via opentelemetry-instrumentation-flask
opentelemetry-propagator-gcp==1.7.0
    # via -r requirements.in
opentelemetry-resourcedetector-gcp==1.7.0a0
    # via opentelemetry-exporter-gcp-trace
opentelemetry-sdk==1.27.0
    # via
    #   -r requirements.in
    #   opentelemetry-exporter-gcp-trace
    #   opentelemetry-resourcedetector-gcp
opentelemetry-semantic-conventions==0.48b0
    # via
    #   opentelemetry-instrumentation-flask
    #   opentelemetry-instrumentation-requests
    #   opentelemetry-instrumentation-wsgi
    #   opentelemetry-sdk
opentelemetry-util-http==0.48b0
    # via
    #   opentelemetry-instrumentation-flask
    #   opentelemetry-instrumentation-requests
    #   opentelemetry-instrumentation-wsgi
packaging==24.1
    # via
    #   gunicorn
    #   opentelemetry-instrumentation-flask
proto-plus==1.24.0
    # via
    #   google-api-core
    #   google-cloud-trace
protobuf==5.28.2
    # via
    #   google-api-core
    #   google-cloud-trace
    #   googleapis-common-protos
    #   grpcio-status
    #   proto-plus
pyasn1==0.6.1
    # via
    #   pyasn1-modules
    #   rsa
pyasn1-modules==0.4.1
    # via google-auth
pycparser==2.22
    # via cffi
pyjwt==2.9.0
    # via -r requirements.in
requests==2.32.3
    # via
    #   -r requirements.in
    #   google-api-core
    #   opentelemetry-resourcedetector-gcp
rsa==4.9
    # via google-auth
typing-extensions==4.12.2
    # via
    #   opentelemetry-resourcedetector-gcp
    #   opentelemetry-sdk
urllib3==2.2.3
    # via
    #   -r requirements.in
    #   requests
werkzeug==3.0.4
    # via flask
wrapt==1.16.0
    # via
    #   deprecated
    #   opentelemetry-instrumentation
    #   opentelemetry-instrumentation-jinja2
zipp==3.20.2
    # via importlib-metadata

# The following packages are considered to be unsafe in a requirements file:
# setuptools

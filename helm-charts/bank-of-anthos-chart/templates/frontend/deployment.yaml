# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{{- if .Values.frontend.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    application: {{ .Values.global.application }}
    environment: {{ .Values.global.environment }}
    team: frontend
    tier: web
  name: frontend
spec:
  replicas: {{ .Values.frontend.replicaCount }}
  selector:
    matchLabels:
      app: frontend
      application: {{ .Values.global.application }}
      environment: {{ .Values.global.environment }}
      team: frontend
      tier: web
  template:
    metadata:
      annotations:
        {{- if .Values.istio.enabled }}
        proxy.istio.io/config: {{ dict "holdApplicationUntilProxyStarts" .Values.istio.proxy.holdApplicationUntilProxyStarts | toJson | quote }}
        {{- end }}
      labels:
        app: frontend
        application: {{ .Values.global.application }}
        environment: {{ .Values.global.environment }}
        team: frontend
        tier: web
    spec:
      containers:
        - env:
            - name: VERSION
              value: {{ .Values.frontend.image.tag | default .Values.global.version | quote }}
            - name: PORT
              value: {{ .Values.frontend.env.port | quote }}
            - name: ENABLE_TRACING
              value: {{ .Values.frontend.env.enableTracing | quote }}
            - name: SCHEME
              value: {{ .Values.frontend.env.scheme | quote }}
            - name: LOG_LEVEL
              value: {{ .Values.frontend.env.logLevel | quote }}
            {{- if .Values.config.demo.enabled }}
            - name: DEFAULT_USERNAME
              valueFrom:
                configMapKeyRef:
                  key: DEMO_LOGIN_USERNAME
                  name: demo-data-config
            - name: DEFAULT_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: DEMO_LOGIN_PASSWORD
                  name: demo-data-config
            {{- end }}
            {{- if .Values.config.demo.oauth.clientId }}
            - name: REGISTERED_OAUTH_CLIENT_ID
              valueFrom:
                configMapKeyRef:
                  key: DEMO_OAUTH_CLIENT_ID
                  name: oauth-config
                  optional: true
            - name: ALLOWED_OAUTH_REDIRECT_URI
              valueFrom:
                configMapKeyRef:
                  key: DEMO_OAUTH_REDIRECT_URI
                  name: oauth-config
                  optional: true
            {{- end }}
          envFrom:
            - configMapRef:
                name: environment-config
            - configMapRef:
                name: service-api-config
          image: "{{ .Values.global.imageRegistry }}/{{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag | default .Values.global.version }}{{- if .Values.frontend.image.digest }}@{{ .Values.frontend.image.digest }}{{- end }}"
          livenessProbe:
            httpGet:
              path: {{ .Values.frontend.livenessProbe.httpGet.path }}
              port: {{ .Values.frontend.livenessProbe.httpGet.port }}
            initialDelaySeconds: {{ .Values.frontend.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.frontend.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.frontend.livenessProbe.timeoutSeconds }}
          name: front
          readinessProbe:
            httpGet:
              path: {{ .Values.frontend.readinessProbe.httpGet.path }}
              port: {{ .Values.frontend.readinessProbe.httpGet.port }}
            initialDelaySeconds: {{ .Values.frontend.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.frontend.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.frontend.readinessProbe.timeoutSeconds }}
          resources:
            {{- toYaml .Values.frontend.resources | nindent 12 }}
          securityContext:
            {{- toYaml .Values.global.containerSecurityContext | nindent 12 }}
          volumeMounts:
            - mountPath: /tmp
              name: tmp
            - mountPath: /tmp/.ssh
              name: publickey
              readOnly: true
      securityContext:
        {{- toYaml .Values.global.securityContext | nindent 8 }}
      serviceAccountName: {{ .Values.global.serviceAccountName }}
      terminationGracePeriodSeconds: 5
      volumes:
        - emptyDir: {}
          name: tmp
        - name: publickey
          secret:
            items:
              - key: {{ .Values.jwt.keyName }}
                path: publickey
            secretName: {{ .Values.jwt.secretName }}
{{- end }}

# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

steps:
  - name: gcr.io/cloud-builders/go:1.16
    id: install-license-check-script
    script: |
      go install github.com/google/addlicense@latest
    timeout: 120s
  - name: gcr.io/cloud-builders/git
    id: check-licenses
    script: |
      #!/bin/bash
      set -ex
      if [[ -d ".git" ]]; then
        rm -rf .git
      fi
      git init
      git add --all
      git -c user.name="CI Bot" -c user.email="<>" commit -m "initial state"
      ./go/bin/addlicense -ignore 'src/frontend/templates/shared/**' ./
      git status -s
      if [[ -n $(git status -s) ]]; then
        exit 1
      fi
    timeout: 120s
  - name: gcr.io/cloud-builders/gsutil # get skaffold build cache
    id: download-skaffold-cache
    args: ['cp', $_CACHE_URI, '/workspace/cache']
    timeout: 120s
  - name: gcr.io/k8s-skaffold/skaffold:v2.7.1 # build images with skaffold
    id: build-and-push-images
    script: | 
      MAVEN_USER_HOME=$MAVEN_USER_HOME ./mvnw jib:_skaffold-fail-if-jib-out-of-date -Djib.requiredVersion=1.4.0 --projects src/ledger/balancereader --also-make jib:_skaffold-files-v2 --quiet --batch-mode
      MAVEN_USER_HOME=$MAVEN_USER_HOME skaffold build --file-output=/workspace/artifacts.json --default-repo=$CONTAINER_REGISTRY --cache-file=/workspace/$CACHE --profile=development
    #args: ['skaffold', 'build', '--file-output=/workspace/artifacts.json', '--default-repo=$_CONTAINER_REGISTRY', '--cache-file=/workspace/$_CACHE', '--profile=development'] # set _CACHE to anything other than "cache" e.g. "no-cache" to reset skaffold cache
  - name: gcr.io/cloud-builders/gsutil # upload skaffold build cache
    id: upload-skaffold-cache
    args: ['cp', '/workspace/$_CACHE',  $_CACHE_URI]
    timeout: 120s
  - name: gcr.io/k8s-skaffold/skaffold:v2.7.1 # run tests with skaffold
    id: run-tests
    script: |
      #!/bin/bash
      set -x
      apt-get update && apt-get -y install python3-venv && python3 -m venv $HOME/venv-python-tests && . $HOME/venv-python-tests/bin/activate
      skaffold test --build-artifacts=/workspace/artifacts.json --assume-yes --profile=development
  - name: gcr.io/cloud-builders/gcloud
    id: set-policy-binding-for-ksa
    args: ['iam', 'service-accounts', 'add-iam-policy-binding', 'gke-workload-development@$PROJECT_ID.iam.gserviceaccount.com', '--role=roles/iam.workloadIdentityUser', '--member=serviceAccount:$PROJECT_ID.svc.id.goog[pr$_PR_NUMBER/bank-of-anthos]']
  - name: gcr.io/k8s-skaffold/skaffold:v2.7.1 # deploy to pr-namespace with skaffold
    id: deploy-to-pr-namespace
    script: |
      #!/bin/bash
      set -x
      gcloud container fleet memberships get-credentials development-membership
      kubectl create namespace $NAMESPACE
      skaffold deploy --namespace=$NAMESPACE --build-artifacts=/workspace/artifacts.json --assume-yes --profile=development --iterative-status-check=false
  - name: gcr.io/k8s-skaffold/skaffold:v2.7.1 # run verification/e2e tests with skaffold
    id: run-e2e-tests
    script: |
      #!/bin/bash
      set -x
      cat <<EOT >> .env
      CYPRESS_baseUrl=http://$(kubectl get service frontend --namespace $NAMESPACE -o jsonpath='{.status.loadBalancer.ingress[0].ip}'
      ROLLOUT=$ROLLOUT
      EOT
      skaffold verify --build-artifacts=/workspace/artifacts.json --profile=development -m frontend --env-file=.env
    env:
      - "ROLLOUT=pr$_PR_NUMBER/$SHORT_SHA"
      - "ARTIFACTS_BUCKET_NAME=$_CACHE_URI"
  - name: gcr.io/k8s-skaffold/skaffold:v2.7.1 # 
    id: delete-environment
    script: |
      #!/bin/bash
      set -x
      skaffold delete --namespace=$NAMESPACE --profile=development
options:
  logging: CLOUD_LOGGING_ONLY
  env:
    - "NAMESPACE=pr$_PR_NUMBER"
    - "GOPATH=/workspace/go"
    - "MAVEN_USER_HOME=/workspace/.m2"
    - "CONTAINER_REGISTRY=$_CONTAINER_REGISTRY"
    - "CACHE=$_CACHE"
  machineType: 'E2_HIGHCPU_8'
tags:
  - pr$_PR_NUMBER
  - ci-pr
